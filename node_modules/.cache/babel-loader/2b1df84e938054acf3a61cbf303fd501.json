{"ast":null,"code":"var _jsxFileName = \"/Users/a1398/ex_fetch/src/components/App.js\";\nimport React, { Component } from 'react';\nimport UsersList from './UsersList';\nimport ButtonFetchUsers from './ButtonFetchUsers';\nimport './App.css';\nconst API = 'https://randomuser.me/api/?results=1';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n\n    this.handleDataFetch = () => {\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(response.status);\n      }).then(response => response.json()).then(data => {\n        const user = data.results;\n        this.setState(prevState => ({\n          users: prevState.users.concat(user)\n        }));\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    const users = this.state.users;\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"fake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"(FAKE!)Users Generator\"))), React.createElement(ButtonFetchUsers, {\n      click: this.handleDataFetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), users.length > 0 ? React.createElement(UsersList, {\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : users);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a1398/ex_fetch/src/components/App.js"],"names":["React","Component","UsersList","ButtonFetchUsers","API","App","state","users","handleDataFetch","fetch","then","response","ok","Error","status","json","data","user","results","setState","prevState","concat","catch","error","console","log","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,sCAAZ;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAK1BC,eAL0B,GAKR,MAAM;AACtBC,MAAAA,KAAK,CAACL,GAAD,CAAL,CACGM,IADH,CACQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACd,iBAAOD,QAAP;AACD;;AACD,cAAME,KAAK,CAACF,QAAQ,CAACG,MAAV,CAAX;AACD,OANH,EAOGJ,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAPpB,EAQGL,IARH,CAQQM,IAAI,IAAI;AACZ,cAAMC,IAAI,GAAGD,IAAI,CAACE,OAAlB;AAEA,aAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1Bb,UAAAA,KAAK,EAAEa,SAAS,CAACb,KAAV,CAAgBc,MAAhB,CAAuBJ,IAAvB;AADmB,SAAL,CAAvB;AAGD,OAdH,EAeGK,KAfH,CAeSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAflB;AAgBD,KAtByB;AAAA;;AAwB1BG,EAAAA,MAAM,GAAG;AACP,UAAMnB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAJ,CADF,CADF,EAIE,oBAAE,gBAAF;AAAmB,MAAA,KAAK,EAAE,KAAKC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGD,KAAK,CAACoB,MAAN,GAAe,CAAf,GAAmB,oBAAE,SAAF;AAAY,MAAA,KAAK,EAAEpB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,GAAiDA,KALpD,CADF;AASD;;AApCyB;;AAuC5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport UsersList from './UsersList';\nimport ButtonFetchUsers from './ButtonFetchUsers';\nimport './App.css';\n\nconst API = 'https://randomuser.me/api/?results=1';\n\nclass App extends Component {\n  state = {\n    users: []\n  }\n\n  handleDataFetch = () => {\n    fetch(API)\n      .then(response => {\n        if(response.ok) {\n          return response;\n        }\n        throw Error(response.status)\n      })\n      .then(response => response.json())\n      .then(data => {\n        const user = data.results;\n\n        this.setState(prevState => ({\n          users: prevState.users.concat(user)\n        }))\n      })\n      .catch(error => console.log(error))\n  }\n\n  render() {\n    const users = this.state.users;\n\n    return(\n      <div className=\"main\">\n        <nav className=\"nav\">\n          <h1><strong className=\"fake\">(FAKE!)Users Generator</strong></h1>\n        </nav>\n        < ButtonFetchUsers click={this.handleDataFetch}/>\n        {users.length > 0 ? < UsersList users={users}/> : users}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}