{"ast":null,"code":"var _jsxFileName = \"/Users/a1398/ex_fetch/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst data = [{\n  id: 1,\n  title: 'Wiadomość nr 1',\n  body: 'Zawartość wiadomości nr 1...'\n}, {\n  id: 2,\n  title: 'Wiadomość nr 2',\n  body: 'Zawartość wiadomości nr 2...'\n}];\nsetInterval(() => {\n  const index = data.length + 1;\n  data.push({\n    id: index,\n    title: \"Wiadomo\\u015B\\u0107 nr \".concat(index),\n    body: \"Zawarto\\u015B\\u0107 wiadomo\\u015Bci nr \".concat(index, \" ...\")\n  });\n}, 2000);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [...data]\n    };\n\n    this.getData = () => {\n      if (this.state.comments.length !== data.length) this.setState({\n        comments: [...data]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.idI = setInterval(this.getData, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.idI);\n  }\n\n  render() {\n    const comments = this.state.comments.map(comment => React.createElement(\"div\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, comment.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, comment.body)));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, comments.reverse());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a1398/ex_fetch/src/App.js"],"names":["React","Component","data","id","title","body","setInterval","index","length","push","App","state","comments","getData","setState","componentDidMount","idI","componentWillUnmount","clearInterval","render","map","comment","reverse"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAC,CAAL;AAAQC,EAAAA,KAAK,EAAE,gBAAf;AAAiCC,EAAAA,IAAI,EAAE;AAAvC,CADW,EAEX;AAAEF,EAAAA,EAAE,EAAC,CAAL;AAAQC,EAAAA,KAAK,EAAE,gBAAf;AAAiCC,EAAAA,IAAI,EAAE;AAAvC,CAFW,CAAb;AAKAC,WAAW,CAAC,MAAK;AACf,QAAMC,KAAK,GAAGL,IAAI,CAACM,MAAL,GAAc,CAA5B;AACAN,EAAAA,IAAI,CAACO,IAAL,CAAU;AACRN,IAAAA,EAAE,EAAEI,KADI;AAERH,IAAAA,KAAK,mCAAkBG,KAAlB,CAFG;AAGRF,IAAAA,IAAI,mDAA6BE,KAA7B;AAHI,GAAV;AAKD,CAPU,EAOR,IAPQ,CAAX;;AASA,MAAMG,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CAAC,GAAGV,IAAJ;AADJ,KADkB;;AAAA,SAK1BW,OAL0B,GAKhB,MAAM;AACd,UAAI,KAAKF,KAAL,CAAWC,QAAX,CAAoBJ,MAApB,KAA+BN,IAAI,CAACM,MAAxC,EACA,KAAKM,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE,CAAC,GAAGV,IAAJ;AADE,OAAd;AAGD,KAVyB;AAAA;;AAY1Ba,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,GAAL,GAAWV,WAAW,CAAC,KAAKO,OAAN,EAAe,IAAf,CAAtB;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKF,GAAN,CAAb;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAMP,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAwBC,OAAO,IAC9C;AAAK,MAAA,GAAG,EAAEA,OAAO,CAAClB,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,OAAO,CAACjB,KAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMiB,OAAO,CAAChB,IAAd,CAFF,CADe,CAAjB;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,QAAQ,CAACU,OAAT,EADH,CADF;AAKD;;AAlCyB;;AAqC5B,eAAeZ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nconst data = [\n  { id:1, title: 'Wiadomość nr 1', body: 'Zawartość wiadomości nr 1...' },\n  { id:2, title: 'Wiadomość nr 2', body: 'Zawartość wiadomości nr 2...' },\n]\n\nsetInterval(()=> {\n  const index = data.length + 1;\n  data.push({\n    id: index,\n    title: `Wiadomość nr ${index}`,\n    body: `Zawartość wiadomości nr ${index} ...`\n  })\n}, 2000)\n\nclass App extends Component {\n  state = {\n    comments: [...data]\n  }\n\n  getData = () => {\n    if (this.state.comments.length !== data.length) \n    this.setState({\n      comments: [...data]\n    })\n  }\n\n  componentDidMount() {\n    this.idI = setInterval(this.getData, 5000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.idI)\n  }\n\n  render() {\n\n    const comments = this.state.comments.map(comment => (\n      <div key={comment.id}>\n        <h4>{comment.title}</h4>\n        <div>{comment.body}</div>\n      </div>\n    ))\n\n    return(\n      <div className=\"App\">\n        {comments.reverse()}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}